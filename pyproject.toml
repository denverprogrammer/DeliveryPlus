[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0,<3.0.0"]

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
strict = true
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
strict_equality = true


[tool.black]
# indent = 4
line-length = 100
target-version = ["py312"]

[tool.isort]
known_first_party = ["apps"]
profile = "black"

[tool.poetry]
name = "packageparcels"
version = "0.1.0"
description = "GPS & IP tracking website with notifications."
authors = ["Josh Martin <denverprogrammer@gmail.com>"]
package-mode = false 

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
celery = "^5.3.4"
django = "^5.0"
django-admin-interface = "^0.28.0"
django-bootstrap5 = "^25.1"
django-debug-toolbar = "^4.3.0"
django-environ = "^0.11.2"
django-extensions = "^4.1"
django-filter = "^25.1"
django-htmx = "^1.17.3"
django-ipware = "^7.0.1"
django-json-widget = "^2.0.1"
django-jsonfield = "^1.4.1"
django-jsonview = "^2.0.0"
django-stubs = "^4.2.7"
django-subadmin = "^3.2.4"
django-tagulous = "^1.3.3"
djangorestframework = "^3.16.0"
gunicorn = "^21.2.0"
markdown = "^3.8"
psycopg2-binary = "^2.9.10"
pydantic = "^2.11.3"
pytz = "^2025.2"
redis = "^5.0.3"
requests = "^2.31.0"
twilio = "^9.5.2"
types-redis = "^4.6.0.20240311"
types-requests = "^2.31.0.20240125"
uvicorn = "^0.34.0"

[tool.poetry.group.dev.dependencies]
black = ">=23.1.0"
debugpy = "^1.8.0"
flake8 = ">=6.0.0"
isort = ">=5.12.0"
mypy = "^1.8.0"
pylint = ">=2.16.3"
pyright = ">=1.1.296"
pytest = ">=7.2.1"
pytest-cov = ">=3.0.0"
toml-sort = ">=0.24.2"

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0.1"
poetry-plugin-sort = ">=0.3.0"
poetry-plugin-export = ">=1.9.0"

[tool.poetry.scripts]
toml-sort = 'toml_sort.cli:cli'

[tool.pylint."messages control"]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0311",  # bad-indentation
    "W0603",  # global-statement
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
]
enable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326",  # bad-whitespace
    "W0311",  # bad-indentation
    "W0603",  # global-statement
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
]
ignore = ["__init__.py", "setup.py", "migrations"]
ignore-paths = ['.*/tests', '.poetry']
max-line-length = 100
max-args = 5
max-locals = 15
max-statements = 50
max-parents = 7
max-attributes = 7
max-public-methods = 20
max-branches = 12

[tool.pyright]
reportMissingTypeArgument = true  # Report generic classes used without type arguments
strictListInference = true  # Use union types when inferring types of lists elements, instead of Any


[tool.tomlsort]
all = true
ignore_case = true
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".Python",
    "env",
    "venv",
    ".venv",
    "ENV",
    "env.bak",
    "venv.bak",
    ".poetry",
    "migrations",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]
max-complexity = 10

[tool.bandit]
exclude_dirs = ["tests", "migrations", ".venv", ".poetry"]
skips = ["B101", "B105", "B311"]
targets = ["apps"]

[[tool.mypy.overrides]]
module = [
    "django.*",
    "rest_framework.*",
    "tagulous.*",
    "debug_toolbar.*",
    "gunicorn.*",
    "uvicorn.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --cov=apps --cov-report=term-missing --cov-report=html"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["apps"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__init__.py",
    "*/admin.py",
    "*/apps.py",
    "*/wsgi.py",
    "*/asgi.py",
    "*/settings.py",
    "*/urls.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
show_missing = true
fail_under = 80