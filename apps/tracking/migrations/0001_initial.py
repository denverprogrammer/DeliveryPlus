# Generated by Django 5.2 on 2025-06-08 16:22

import common.enums
import django.db.models.deletion
import taggit.managers

from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("mgmt", "0001_initial"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "publishing_type",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                ("landing_page_url", models.URLField(blank=True, null=True)),
                ("tracking_pixel", models.TextField(blank=True, null=True)),
                (
                    "ip_precedence",
                    models.CharField(
                        choices=[("server", "Server"), ("client", "Header")],
                        default=common.enums.TrackingType["SERVER"],
                        help_text="Determines whether to use server or client IP for tracking",
                        max_length=10,
                    ),
                ),
                (
                    "location_precedence",
                    models.CharField(
                        choices=[("server", "Server"), ("client", "Header")],
                        default=common.enums.TrackingType["SERVER"],
                        help_text="Determines whether to use server or client location for tracking",
                        max_length=10,
                    ),
                ),
                (
                    "locale_precedence",
                    models.CharField(
                        choices=[("server", "Server"), ("client", "Header")],
                        default=common.enums.TrackingType["SERVER"],
                        help_text="Determines whether to use server or client locale for tracking",
                        max_length=10,
                    ),
                ),
                (
                    "browser_precedence",
                    models.CharField(
                        choices=[("server", "Server"), ("client", "Header")],
                        default=common.enums.TrackingType["SERVER"],
                        help_text="Determines whether to use server or client browser information for tracking",
                        max_length=10,
                    ),
                ),
                (
                    "time_precedence",
                    models.CharField(
                        choices=[("server", "Server"), ("client", "Header")],
                        default=common.enums.TrackingType["SERVER"],
                        help_text="Determines whether to use server or client time for tracking",
                        max_length=10,
                    ),
                ),
                ("ip_tracking", models.JSONField(blank=True, default=list, null=True)),
                (
                    "location_tracking",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "locale_tracking",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "time_tracking",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "browser_tracking",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="campaigns",
                        to="mgmt.company",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Campaigns",
            },
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=255)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("inactive", "Inactive")],
                        default="active",
                        max_length=10,
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="Enter tags to categorize this agent (max 10 tags)",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agents",
                        to="tracking.campaign",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Agents",
            },
        ),
        migrations.CreateModel(
            name="TrackingData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("http_method", models.CharField(max_length=10)),
                ("server_timestamp", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "ip_source",
                    models.CharField(
                        blank=True,
                        choices=[("server", "Server"), ("client", "Header")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("os", models.CharField(blank=True, max_length=100, null=True)),
                ("browser", models.CharField(blank=True, max_length=100, null=True)),
                ("platform", models.CharField(blank=True, max_length=100, null=True)),
                ("locale", models.CharField(blank=True, max_length=10, null=True)),
                ("client_time", models.DateTimeField(blank=True, null=True)),
                (
                    "client_timezone",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "location_source",
                    models.CharField(
                        blank=True,
                        choices=[("server", "Server"), ("client", "Header")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "_ip_data",
                    models.JSONField(blank=True, db_column="ip_data", null=True),
                ),
                (
                    "_user_agent_data",
                    models.JSONField(blank=True, db_column="user_agent_data", null=True),
                ),
                (
                    "_header_data",
                    models.JSONField(blank=True, db_column="header_data ", null=True),
                ),
                (
                    "_form_data",
                    models.JSONField(blank=True, db_column="form_data", null=True),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking",
                        to="tracking.agent",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Tracking Data",
            },
        ),
    ]
