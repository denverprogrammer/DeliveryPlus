services:
    web:
        build:
            context: .
            dockerfile: Dockerfile.python
        volumes:
            - ./apps:/app
            - static_files:/app/staticfiles
        # ports:
        #     - "5678:5678"  # Debug port
        environment:
            SECRET_KEY: ${SECRET_KEY}
            DEBUG: ${DEBUG}
            ALLOWED_HOSTS: ${ALLOWED_HOSTS}
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_USER: ${DATABASE_USER}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            DATABASE_HOST: ${DATABASE_HOST}
            DATABASE_PORT: ${DATABASE_PORT}
            VPN_API_IO_KEY: ${VPN_API_IO_KEY}
            USER_STACK_KEY: ${USER_STACK_KEY}
            IP_STACK_KEY: ${IP_STACK_KEY}
            IP_GEO_LOCATION_KEY: ${IP_GEO_LOCATION_KEY}
            TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
            TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
            # PYDEVD_DISABLE_FILE_VALIDATION: 1
        depends_on:
            - database
            - redis
            - frontend

    frontend:
        build:
            context: .
            dockerfile: Dockerfile.node
        volumes:
            - ./frontend:/app
            - /app/node_modules # Anonymous volume to prevent host override
            - delivery_build:/app/apps/staticfiles/delivery
            - management_build:/app/apps/staticfiles/management
        environment:
            - NODE_ENV=${NODE_ENV}
        ports:
            - "3000:3000"  # Delivery app
            - "3001:3001"  # Management app

    nginx:
        image: nginx:1.23.2-alpine
        ports:
            - "80:80"
        environment:
            DOMAIN: ${DOMAIN}
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - static_files:/static
            - delivery_build:/static/delivery
            - management_build:/static/management
        depends_on:
            - web
            - frontend

    database:
        image: postgres:15
        environment:
            POSTGRES_HOST: ${DATABASE_HOST}
            POSTGRES_PORT: ${DATABASE_PORT}
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data/

    redis:
        image: redis:7.2
        ports:
            - "6379:6379"

    redis-commander:
        image: rediscommander/redis-commander:latest
        environment:
            - REDIS_HOSTS=local:redis:6379
        ports:
            - "8081:8081"

    adminer:
        image: adminer
        restart: always
        ports:
            - "8080:8080"
        depends_on:
            - database

volumes:
    postgres_data:
    static_files:
    delivery_build:
    management_build:
